import { useState, useEffect } from "react";
import AuthenticatedLayout from "@/Layouts/AuthenticatedLayout";
import { Head, Link, usePage } from "@inertiajs/react";
import Dropdown from "@/Components/Dropdown";
// üü° ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Type ‡∏Ç‡∏≠‡∏á Transaction
interface Transaction {
    id: number;
    category: string;
    icon: string;
    description: string;
    amount: number;
    date: string;
    created_at?: string;
    timestamp: number;
}

export default function Dashboard() {
    const { auth } = usePage().props;
    const userId = auth.user.id;
    const [transactions, setTransactions] = useState<Transaction[]>([]);
    const [totalIncome, setTotalIncome] = useState(0);
    const [totalExpense, setTotalExpense] = useState(0);
    const [totalBalance, setTotalBalance] = useState(0);

    //‡∏õ‡πä‡∏≠‡∏ö‡∏≠‡∏±‡∏û‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏•‡∏ö
    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);
    const [deleteTransactionId, setDeleteTransactionId] = useState<
        number | null
    >(null);

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°Popup
    const [selectedTransaction, setSelectedTransaction] =
        useState<Transaction | null>(null);

    const openPopup = (transaction: Transaction) => {
        setSelectedTransaction(transaction);
    };

    const closePopup = () => {
        setSelectedTransaction(null);
    };
    // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡πä‡∏≠‡∏ö‡∏≠‡∏±‡∏û‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö
    const confirmDelete = (id: number) => {
        setDeleteTransactionId(id);
        setShowDeleteConfirm(true);
    };

    // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    const [isEditing, setIsEditing] = useState(false);
    const [editTransaction, setEditTransaction] = useState<Transaction | null>(
        null
    );

    const startEditing = () => {
        setIsEditing(true);
        setEditTransaction(selectedTransaction);
    };

    const cancelEditing = () => {
        setIsEditing(false);
        setEditTransaction(null);
    };

    // ‚úÖ ‡∏•‡∏ö‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°
    const handleDelete = async () => {
        if (!deleteTransactionId) return;

        try {
            console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏° ID:", deleteTransactionId);

            const csrfToken = document
                .querySelector('meta[name="csrf-token"]')
                ?.getAttribute("content");

            const response = await fetch(
                `/transactions/${deleteTransactionId}`,
                {
                    method: "DELETE",
                    headers: {
                        "Content-Type": "application/json",
                        "X-CSRF-TOKEN": csrfToken || "",
                    },
                    credentials: "same-origin",
                }
            );

            if (response.ok) {
                console.log("‚úÖ ‡∏•‡∏ö‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
                closePopup();
                fetchTransactions();
            } else {
                console.error("‚ùå ‡∏•‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", await response.text());
            }
        } catch (error) {
            console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°:", error);
        }

        setShowDeleteConfirm(false); // ‡∏õ‡∏¥‡∏î‡∏õ‡πä‡∏≠‡∏ö‡∏≠‡∏±‡∏û‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏•‡∏ö
    };

    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    const handleUpdate = async () => {
        if (!editTransaction) return;

        try {
            console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:", editTransaction);

            const csrfToken = document
                .querySelector('meta[name="csrf-token"]')
                ?.getAttribute("content");

            const response = await fetch(
                `/transactions/${editTransaction.id}`,
                {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json",
                        "X-CSRF-TOKEN": csrfToken || "",
                    },
                    credentials: "same-origin",
                    body: JSON.stringify(editTransaction),
                }
            );

            if (response.ok) {
                console.log("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
                closePopup();
                fetchTransactions();
            } else {
                console.error("‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", await response.text());
            }
        } catch (error) {
            console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:", error);
        }

        setIsEditing(false);
    };

    // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°
    const fetchTransactions = async () => {
        console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°...");
        try {
            const response = await fetch(`/transactions?user_id=${userId}`);
            if (!response.ok)
                throw new Error(`HTTP error! status: ${response.status}`);

            const data = await response.json();
            console.log("‚úÖ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î‡∏°‡∏≤:", data);

            const transactions = (data.transactions || [])
                .map((t: Transaction) => {
                    let transactionDate =
                        t.created_at && !isNaN(Date.parse(t.created_at))
                            ? new Date(t.created_at)
                            : t.date && !isNaN(Date.parse(t.date))
                            ? new Date(t.date)
                            : null;

                    return {
                        ...t,
                        amount: Number(t.amount) || 0,
                        date: transactionDate
                            ? transactionDate.toISOString().split("T")[0]
                            : "Invalid Date",
                        timestamp: transactionDate
                            ? transactionDate.getTime()
                            : 0,
                        category: t.category || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà",
                        icon: t.icon || "‚ùì", // ‚úÖ ‡πÉ‡∏ä‡πâ `icon` ‡∏à‡∏≤‡∏Å API
                    };
                })
                .sort(
                    (a: Transaction, b: Transaction) =>
                        b.timestamp - a.timestamp
                );

            console.log("üî¢ Transactions (‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤):", transactions); // ‚úÖ Debug ‡∏î‡∏π‡∏Ñ‡πà‡∏≤

            setTransactions(transactions);

            // ‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö
            const income = transactions
                .filter((t: Transaction) => t.amount > 0)
                .reduce((sum: number, t: Transaction) => sum + t.amount, 0);

            // ‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢
            const expense = transactions
                .filter((t: Transaction) => t.amount < 0)
                .reduce(
                    (sum: number, t: Transaction) => sum + Math.abs(t.amount),
                    0
                );

            console.log("üí∞ ‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö:", income, "üí∏ ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢:", expense); // ‚úÖ Debug ‡∏î‡∏π‡∏Ñ‡πà‡∏≤

            // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£
            setTotalIncome(income);
            setTotalExpense(expense);
            setTotalBalance(income - expense);
        } catch (error) {
            console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°:", error);
        }
    };

    // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤ ‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°
    useEffect(() => {
        if (userId) {
            // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠ userId ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤
            fetchTransactions();
            window.addEventListener("transactionAdded", fetchTransactions);
            return () =>
                window.removeEventListener(
                    "transactionAdded",
                    fetchTransactions
                );
        }
    }, [userId]); // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠ userId ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô

    return (
        <AuthenticatedLayout>
            <Head title="Dashboard" />

        {/* üîπ ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤ */}
        <div className="bg-amber-500 text-white p-4 flex justify-between items-center shadow-md">
            <button className="text-white text-xl">üîç</button>
            <h2 className="text-lg font-semibold">‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</h2>

            {/* üîπ ‡∏õ‡∏∏‡πà‡∏° "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î" + Dropdown Profile */}
            <div className="flex items-center space-x-4">
                {/* ‡∏õ‡∏∏‡πà‡∏° ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î */}
                <Link
                    href="/details"
                    className="bg-white text-amber-500 px-3 py-1 rounded-lg shadow"
                >
                    ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                </Link>

                {/*{/* Dropdown Profile */}
                <Dropdown>
                    <Dropdown.Trigger>
                        <span className="inline-flex rounded-md">
                            <button
                                type="button"
                                className="inline-flex items-center rounded-md border border-transparent bg-white px-3 py-1 text-sm font-medium text-amber-500 transition duration-150 ease-in-out hover:text-amber-700 focus:outline-none"
                            >
                                {auth.user.name} {/* ‚úÖ ‡πÉ‡∏ä‡πâ user.name */}
                                <svg
                                    className="-me-0.5 ms-2 h-4 w-4"
                                    xmlns="http://www.w3.org/2000/svg"
                                    viewBox="0 0 20 20"
                                    fill="currentColor"
                                >
                                    <path
                                        fillRule="evenodd"
                                        d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                                        clipRule="evenodd"
                                    />
                                </svg>
                            </button>
                        </span>
                    </Dropdown.Trigger>

                    <Dropdown.Content>
                        {/* ‚úÖ ‡πÅ‡∏Å‡πâ href ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏≤‡∏ò‡∏ï‡∏£‡∏á ‡∏ñ‡πâ‡∏≤‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô route() ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ */}
                        <Dropdown.Link href="/profile/edit">
                            Profile
                        </Dropdown.Link>
                        <Dropdown.Link href="/logout" method="post" as="button">
                            Log Out
                        </Dropdown.Link>
                    </Dropdown.Content>
                </Dropdown>
            </div>
        </div>


            {/* üîπ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤ */}
            <div className="min-h-screen bg-amber-100 p-4">
                <div className="flex flex-col items-center justify-center text-lg font-semibold">
                    {/* ‚úÖ ‡∏ù‡∏±‡πà‡∏á‡∏Ç‡∏ß‡∏≤: ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ + ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢ */}
                    <div className="bg-white rounded-lg shadow-lg p-4 w-full mx-4">
                        <div className="flex justify-between w-full px-8">
                            <div className="text-left">
                                <p className="text-gray-500 text-sm">‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ</p>
                                <p className="text-green-500 font-bold text-xl">
                                    +‡∏ø{totalIncome.toLocaleString()}
                                </p>
                            </div>
                            <div className="text-right">
                                <p className="text-gray-500 text-sm">
                                    ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢
                                </p>
                                <p className="text-red-500 font-bold text-xl">
                                    -‡∏ø{Math.abs(totalExpense).toLocaleString()}
                                </p>
                            </div>
                        </div>

                        {/* ‚úÖ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á */}
                        <div className="mt-4 text-center w-full">
                            <p className="text-gray-700 text-sm">
                                ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
                            </p>
                            <p
                                className={
                                    totalBalance >= 0
                                        ? "text-green-500 text-3xl font-bold"
                                        : "text-red-500 text-3xl font-bold"
                                }
                            >
                                {totalBalance >= 0
                                    ? `+‡∏ø${totalBalance.toLocaleString()}`
                                    : `-‡∏ø${Math.abs(
                                          totalBalance
                                      ).toLocaleString()}`}
                            </p>
                        </div>
                    </div>
                </div>

                {/* üîπ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î */}
                <div className="bg-white mx-4 my-4 p-4 rounded-lg shadow-lg">
                    <h3 className="text-lg font-semibold text-gray-700">
                        ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
                    </h3>
                    <div className="mt-2">
                        {transactions.length > 0 ? (
                            transactions.reduce(
                                (acc: JSX.Element[], transaction, index) => {
                                    // üü° ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏ó‡∏¢
                                    const transactionDate = new Date(
                                        transaction.date
                                    ).toLocaleDateString("th-TH", {
                                        day: "2-digit",
                                        month: "long",
                                        year: "numeric",
                                    });

                                    // üü° ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ß‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                                    if (
                                        index === 0 ||
                                        transactions[index - 1].date !==
                                            transaction.date
                                    ) {
                                        acc.push(
                                            <h4
                                                key={`date-${transaction.date}`}
                                                className="text-md font-bold text-gray-600 mt-4"
                                            >
                                                {transactionDate}
                                            </h4>
                                        );
                                    }

                                    // üü° ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°
                                    acc.push(
                                        <div
                                            key={transaction.id}
                                            className="flex justify-between items-center py-2 border-b cursor-pointer"
                                            onClick={() =>
                                                openPopup(transaction)
                                            } // ‚úÖ ‡πÉ‡∏™‡πà‡∏ñ‡∏π‡∏Å‡∏ó‡∏µ‡πà
                                        >
                                            <div className="flex items-center">
                                                {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô */}
                                                <span className="text-2xl">
                                                    {transaction.icon
                                                        ? transaction.icon
                                                        : "‚ùì"}
                                                </span>

                                                <div className="ml-3">
                                                    {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô */}
                                                    <p className="font-semibold text-gray-800">
                                                        {transaction.category
                                                            ? transaction.category
                                                            : "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà"}
                                                    </p>
                                                    {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô */}
                                                    <p className="text-gray-500 text-sm">
                                                        {transaction.description
                                                            ? transaction.description
                                                            : "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î"}
                                                    </p>
                                                    <p className="text-gray-400 text-xs">
                                                        üïí{" "}
                                                        {transaction.created_at
                                                            ? new Date(
                                                                  transaction.created_at
                                                              ).toLocaleTimeString(
                                                                  "th-TH",
                                                                  {
                                                                      hour: "2-digit",
                                                                      minute: "2-digit",
                                                                  }
                                                              )
                                                            : "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ß‡∏•‡∏≤"}
                                                    </p>{" "}
                                                    {/* ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤ */}
                                                </div>
                                            </div>

                                            {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢ ‡πÅ‡∏•‡∏∞‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö */}
                                            <span
                                                className={`font-bold ${
                                                    transaction.amount > 0
                                                        ? "text-green-500"
                                                        : "text-red-500"
                                                }`}
                                            >
                                                {transaction.amount > 0
                                                    ? `+‡∏ø${Number(
                                                          transaction.amount
                                                      ).toFixed(2)}`
                                                    : `-‡∏ø${Math.abs(
                                                          Number(
                                                              transaction.amount
                                                          )
                                                      ).toFixed(2)}`}
                                            </span>
                                        </div>
                                    );
                                    return acc;
                                },
                                []
                            )
                        ) : (
                            <p className="text-center text-gray-500">
                                ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á
                            </p>
                        )}
                    </div>
                </div>
            </div>

            {/* üîπ Floating Button (‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏≠‡∏¢) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏° */}
            <Link
                href="/transactions/add"
                className="fixed bottom-16 right-4 bg-amber-400 p-4 rounded-full shadow-lg"
            >
                ‚ûï
            </Link>

            {/* üîπ Popup ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏° */}
            {selectedTransaction && (
                <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50">
                    <div className="bg-white p-6 rounded-lg shadow-lg w-80">
                        <h2 className="text-xl font-semibold mb-4">
                            {isEditing ? "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°" : "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°"}
                        </h2>

                        {/* üîπ ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ñ‡πâ‡∏≤ isEditing ‡πÄ‡∏õ‡πá‡∏ô true */}
                        {isEditing ? (
                            <>
                                <input
                                    type="text"
                                    className="w-full border p-2 rounded mb-2"
                                    value={editTransaction?.description || ""}
                                    onChange={(e) =>
                                        setEditTransaction({
                                            ...editTransaction!,
                                            description: e.target.value,
                                        })
                                    }
                                />
                                <input
                                    type="number"
                                    className="w-full border p-2 rounded mb-2"
                                    value={editTransaction?.amount || ""}
                                    onChange={(e) =>
                                        setEditTransaction({
                                            ...editTransaction!,
                                            amount: Number(e.target.value),
                                        })
                                    }
                                />
                                <div className="flex justify-end mt-4">
                                    <button
                                        onClick={cancelEditing}
                                        className="px-4 py-2 bg-gray-300 rounded mr-2"
                                    >
                                        ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                                    </button>
                                    <button
                                        onClick={handleUpdate}
                                        className="px-4 py-2 bg-blue-500 text-white rounded"
                                    >
                                        ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                                    </button>
                                </div>
                            </>
                        ) : (
                            <>
                                <p className="text-lg">
                                    <span className="text-2xl">
                                        {selectedTransaction.icon}
                                    </span>{" "}
                                    {selectedTransaction.category}
                                </p>
                                <p className="text-gray-600">
                                    {selectedTransaction.description ||
                                        "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î"}
                                </p>
                                <p
                                    className={`font-bold text-lg ${
                                        selectedTransaction.amount > 0
                                            ? "text-green-500"
                                            : "text-red-500"
                                    }`}
                                >
                                    {selectedTransaction.amount > 0
                                        ? `+‡∏ø${selectedTransaction.amount.toFixed(
                                              2
                                          )}`
                                        : `-‡∏ø${Math.abs(
                                              selectedTransaction.amount
                                          ).toFixed(2)}`}
                                </p>
                                <div className="flex justify-end mt-4">
                                    <button
                                        onClick={closePopup}
                                        className="px-4 py-2 bg-gray-300 rounded mr-2"
                                    >
                                        ‡∏õ‡∏¥‡∏î
                                    </button>
                                    {/*‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤ /transactions/add ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡πÑ‡∏´‡∏ô ‡πÇ‡∏î‡∏¢‡∏™‡πà‡∏á id ‡πÑ‡∏õ‡πÉ‡∏ô URL*/}
                                    <button
                                        onClick={() =>
                                            (window.location.href = `/transactions/add?id=${selectedTransaction?.id}`)
                                        }
                                        className="px-4 py-2 bg-yellow-500 text-white rounded mr-2"
                                    >
                                        ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                                    </button>

                                    <button
                                        onClick={() =>
                                            confirmDelete(
                                                selectedTransaction.id
                                            )
                                        }
                                        className="px-4 py-2 bg-red-500 text-white rounded"
                                    >
                                        ‡∏•‡∏ö
                                    </button>
                                </div>
                            </>
                        )}
                    </div>
                </div>
            )}

            {/* üîπ Popup ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö */}
            {showDeleteConfirm && (
                <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50">
                    <div className="bg-white p-6 rounded-lg shadow-lg w-80">
                        <h2 className="text-xl font-semibold mb-4 text-center">
                            ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö
                        </h2>
                        <p className="text-gray-700 text-center">
                            ‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ?
                        </p>
                        <div className="flex justify-center mt-4 space-x-3">
                            <button
                                onClick={() => setShowDeleteConfirm(false)}
                                className="px-4 py-2 bg-gray-300 rounded"
                            >
                                ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                            </button>
                            <button
                                onClick={() => handleDelete()}
                                className="px-4 py-2 bg-red-500 text-white rounded"
                            >
                                ‡∏•‡∏ö
                            </button>
                        </div>
                    </div>
                </div>
            )}
        </AuthenticatedLayout>
    );
}
